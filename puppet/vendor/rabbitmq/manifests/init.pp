class rabbitmq (
  $version = '3.4.3-1',
  $erlangCookie = 'KITSVFQREKVSJVFBVEIR',
  $fileDescriptorLimit = 40960,

  $vhosts = {},
  $users = {},
  $permissions = {},
){
  case $::operatingsystem {
    ubuntu, debian : {
      $package_name = "rabbitmq-server"
      # $package_name_plugins = "rabbitmq-plugins-common"
      $service_name = "rabbitmq-server"
    }
  }

  create_resources('rabbitmq::vhost', $vhosts)
  create_resources('rabbitmq::users', $users)
  create_resources('rabbitmq::vhost', $permissions)
  
  exec {"/usr/sbin/rabbitmq-plugins enable rabbitmq_stomp":
    environment => ["HOME=/root/",],
    unless => '/usr/sbin/rabbitmq-plugins list | /bin/grep rabbitmq_stomp | /bin/grep "[E]"',
    notify => Service[$service_name],
    require => Package[$package_name],
  }
  
  exec {"/usr/sbin/rabbitmq-plugins enable rabbitmq_management":
    environment => ["HOME=/root/",],
    unless => '/usr/sbin/rabbitmq-plugins list | /bin/grep rabbitmq_management | /bin/grep "[E]"',
    notify => Service[$service_name],
    require => Package[$package_name],
  }

  package { $package_name:
    ensure => $version,
    require => Apt::Source['rabbitmq'],
  }

  file { "/etc/rabbitmq/rabbitmq.conf.d/":
    ensure => directory,
    require => Package[$package_name],
  }

  file { "/etc/rabbitmq/rabbitmq.config":
    ensure => present,
    content => '[{rabbit,[{cluster_partition_handling, pause_minority}, {log_levels, [{connection, error}]}, {loopback_users, []}]}].
',
    require => Package[$package_name],
    notify => Service[$service_name],
  }

  file { '/etc/default/rabbitmq-server':
    ensure => present,
    content => "ulimit -n ${fileDescriptorLimit} # Generated by puppet",
    require => Package[$package_name],
    notify => Service[$service_name],
  }

  file { "/etc/rabbitmq/rabbitmq-env.conf":
    ensure => present,
    notify => Service[$service_name],
    source => "puppet:///modules/rabbitmq/rabbitmq-env.conf",
    require => Package[$package_name],
  }

  class { 'rabbitmq::cookie':
    erlangCookie => $erlangCookie,
  }
  
  service { $service_name:
    ensure   => running,
    enable   => true,
    provider => "upstart",
    require => Package[$package_name],
  }

  apt::source { 'rabbitmq':
    ensure     => absent,
    location   => 'http://www.rabbitmq.com/debian/',
    repos      => 'main',
    release    => 'testing',
    key        => {
      id     =>  '056E8E56',
      source => 'http://www.rabbitmq.com/rabbitmq-signing-key-public.asc',
    }
  }

}
