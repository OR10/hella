<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <imports>
        <import resource="services/annotations.xml"/>
        <import resource="services/controller.xml"/>
        <import resource="services/commands.xml"/>
        <import resource="services/database_facades.xml"/>
        <import resource="services/helper.xml"/>
        <import resource="services/job_instructions.xml"/>
        <import resource="services/voters.xml"/>
        <import resource="services/monitoring.xml"/>
        <import resource="services/param_converters.xml"/>
        <import resource="services/project_deleter.xml"/>
    </imports>

    <services>
        <!--
          - Default frame_cdn implementation is the flysystem one
          - It may be overridden through the parameters.yml for different systems
          -->
        <service id="annostation.labeling_api.service.frame_cdn.selected-alias"
                 alias="annostation.labeling_api.service.frame_cdn.flysystem"/>

        <!--
          - Default video_cdn implementation is the flysystem one
          - It may be overridden through the parameters.yml for different systems
          -->
        <service id="annostation.labeling_api.service.video_cdn.selected-alias"
                 alias="annostation.labeling_api.service.video_cdn.flysystem"/>

        <service id="annostation.labeling_api.service.frame_cdn.flysystem"
                 class="AnnoStationBundle\Service\FrameCdn\Flysystem">
            <argument>%frame_cdn_base_url%</argument>
            <argument type="service" id="oneup_flysystem.frame_cdn_filesystem"/>
        </service>

        <service id="annostation.labeling_api.service.calibration_file_converter"
                 class="AnnoStationBundle\Service\CalibrationFileConverter">
        </service>

        <service id="annostation.labeling_api.service.label_structure" class="AnnoStationBundle\Service\LabelStructure">
        </service>

        <service id="annostation.labeling_api.service.video_importer" class="AnnoStationBundle\Service\VideoImporter">
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
            <argument type="service" id="annostation.labeling_api.database.facade.calibration_data"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.additional_frame_number_mapping"/>
            <argument type="service" id="annostation.labeling_api.service.video.meta_data_reader"/>
            <argument type="service" id="annostation.labeling_api.service.video.video_frame_splitter"/>
            <argument type="service" id="annostation.labeling_api.service.label_structure"/>
            <argument type="service" id="annostation.labeling_api.service.couch_db_update_conflict_retry"/>
            <argument type="service" id="annostation.labeling_api.vendor.worker_pool.amqp"/>
            <argument type="service" id="annostation.labeling_api.service.calibration_file_converter"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
        </service>


        <service id="annostation.labeling_api.service.video.meta_data_reader"
                 class="AnnoStationBundle\Service\Video\MetaDataReader">
            <argument>%ffprobe_executable%</argument>
        </service>

        <service id="annostation.labeling_api.service.couch_db_update_conflict_retry"
                 class="AnnoStationBundle\Service\CouchDbUpdateConflictRetry">
            <argument type="service" id="doctrine_couchdb.odm.default_document_manager"/>
        </service>

        <service id="annostation.labeling_api.service.task_configuration_xml_converter_factory"
                 class="AnnoStationBundle\Service\TaskConfigurationXmlConverterFactory">
        </service>

        <service id="annostation.labeling_api.service.task_database_creator" class="AnnoStationBundle\Service\TaskDatabaseCreator">
            <argument type="service" id="doctrine_couchdb.odm.default_document_manager"/>
            <argument type="service" id="annostation.services.couch_db_replicator_service"/>
            <argument type="service" id="annostation.labeling_api.service.task_database_validate_doc_update_document_service"/>
        </service>

        <service id="annostation.labeling_api.service.task_creator" class="AnnoStationBundle\Service\TaskCreator">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
            <argument type="service" id="annostation.labeling_api.database.facade.calibration_data"/>
            <argument type="service" id="annostation.labeling_api.database.facade.additional_frame_number_mapping"/>
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
            <argument type="service" id="annostation.labeling_api.service.label_structure"/>
            <argument type="service" id="annostation.labeling_api.service.couch_db_update_conflict_retry"/>
            <argument type="service" id="annostation.labeling_api.vendor.logger"/>
            <argument type="service" id="annostation.labeling_api.service.task_database_creator"/>
            <argument type="service" id="annostation.labeling_api.service.task_database_security_permission_service"/>
        </service>

        <service id="annostation.labeling_api.service.task_incomplete" class="AnnoStationBundle\Service\TaskIncomplete">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
            <argument type="service" id="annostation.labeling_api.service.task_configuration_xml_converter_factory"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group_in_frame"/>
        </service>

        <service id="annostation.labeling_api.service.label_importer.csv"
                 class="AnnoStationBundle\Service\LabelImporter\Csv">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeled_thing"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeled_thing_in_frame"/>
            <argument type="service" id="annostation.labeling_api.service.task_incomplete"/>
        </service>

        <service id="annostation.labeling_api.service.authorization"
                 class="AnnoStationBundle\Service\Authorization">
            <argument type="service" id="security.authorization_checker"/>
        </service>

        <service id="annostation.labeling_api.service.ghost_classes_propagation"
                 class="AnnoStationBundle\Service\GhostClassesPropagation">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
        </service>


        <service id="annostation.labeling_api.service.xml_validator.schema.simple_xml_label_config"
                 class="AnnoStationBundle\Service\XmlValidator\Schema\SimpleXmlLabelConfig">
        </service>
        <service id="annostation.labeling_api.service.xml_validator.schema.requirements_xml_label_config"
                 class="AnnoStationBundle\Service\XmlValidator\Schema\RequirementsXmlLabelConfig">
        </service>
        <service id="annostation.labeling_api.service.xml_validator.schema.requirements_xml_import"
                 class="AnnoStationBundle\Service\XmlValidator\Schema\RequirementsXmlImport">
        </service>

        <service id="annostation.labeling_api.service.simple_xml_validator"
                 class="AnnoStationBundle\Service\XmlValidator">
            <argument type="service"
                      id="annostation.labeling_api.service.xml_validator.schema.simple_xml_label_config"/>
        </service>
        <service id="annostation.labeling_api.service.requirements_xml_validator"
                 class="AnnoStationBundle\Service\XmlValidator">
            <argument type="service"
                      id="annostation.labeling_api.service.xml_validator.schema.requirements_xml_label_config"/>
        </service>
        <service id="annostation.labeling_api.service.xml_validator_requirements_xml_import"
                 class="AnnoStationBundle\Service\XmlValidator">
            <argument type="service"
                      id="annostation.labeling_api.service.xml_validator.schema.requirements_xml_import"/>
        </service>

        <service id="annostation.labeling_api.service.exporter.legacy_project_to_csv"
                 class="AnnoStationBundle\Service\Exporter\LegacyProjectToCsv">
            <argument type="service" id="annostation.labeling_api.service.ghost_classes_propagation"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.service.depth_buffer"/>
            <argument type="service" id="annostation.labeling_api.database.facade.calibration_data"/>
            <argument type="service" id="annostation.labeling_api.database.facade.exporter"/>
        </service>

        <service id="annostation.labeling_api.service.exporter.generic_xml_project_to_csv"
                 class="AnnoStationBundle\Service\Exporter\GenericXmlProjectToCsv">
            <argument type="service" id="annostation.labeling_api.database.facade.exporter"/>
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeled_thing_in_frame"/>
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.service.column_group_factory"/>
            <argument type="service" id="annostation.labeling_api.service.shape_columns_factory"/>
            <argument type="service" id="annostation.labeling_api.service.task_configuration_xml_converter_factory"/>
            <argument type="service" id="annostation.labeling_api.service.class_columns_factory"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
            <argument type="service" id="annostation.labeling_api.service.ghost_classes_propagation"/>
            <argument type="service" id="annostation.labeling_api.database.facade.calibration_data"/>
        </service>

        <service id="annostation.labeling_api.service.exporter.requirements_project_to_xml"
                 class="AnnoStationBundle\Service\Exporter\RequirementsProjectToXml">
            <argument type="service" id="annostation.labeling_api.database.facade.exporter"/>
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
            <argument type="service" id="annostation.labeling_api.database.facade.additional_frame_number_mapping"/>
            <argument type="service" id="annostation.labeling_api.database.facade.calibration_data"/>
            <argument type="service" id="annostation.labeling_api.database.facade.campaign"/>
            <argument type="service" id="annostation.labeling_api.service.ghost_classes_propagation"/>
            <argument type="service" id="annostation.labeling_api.service.ghost_labeled_thing_group_in_frame_classes_propagation"/>
            <argument type="service" id="annostation.labeling_api.database.facade.user.selected-alias"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_group"/>
            <argument type="service" id="annostation.labeling_api.service.labeled_frame_end_calculation_service"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group_in_frame"/>
            <argument type="service" id="annostation.labeling_api.service.depth_buffer"/>
            <argument>%requirements_xml_version%</argument>
        </service>

        <service id="annostation.labeling_api.service.class_columns_factory"
                 class="AnnoStationBundle\Service\ClassColumnsFactory">
        </service>

        <service id="annostation.labeling_api.service.column_group_factory"
                 class="AnnoStationBundle\Service\ColumnGroupFactory">
        </service>

        <service id="annostation.labeling_api.service.shape_columns_factory"
                 class="AnnoStationBundle\Service\ShapeColumnsFactory">
            <argument type="collection">
                <argument type="service"
                          key="rectangle"
                          id="annostation.labeling_api.helper.export.shape_columns.rectangle"/>
                <argument type="service"
                          key="pedestrian"
                          id="annostation.labeling_api.helper.export.shape_columns.pedestrian"/>
                <argument type="service"
                          key="cuboid"
                          id="annostation.labeling_api.helper.export.shape_columns.cuboid"/>
                <argument type="service"
                          key="polygon"
                          id="annostation.labeling_api.helper.export.shape_columns.polygon"/>
            </argument>
        </service>

        <service id="annostation.labeling_api.service.depth_buffer" class="AnnoStationBundle\Service\DepthBuffer">
            <argument type="service" id="annostation.labeling_api.service.matrix_projection" />
        </service>

        <service id="annostation.labeling_api.service.matrix_projection" class="AnnoStationBundle\Service\MatrixProjection">
        </service>

        <service id="annostation.labeling_api.service.task_read_only_decider" class="AnnoStationBundle\Service\TaskReadOnlyDecider">
            <argument type="service" id="annostation.labeling_api.database.facade.user.selected-alias" />
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task" />
        </service>

        <service id="annostation.labeling_api.service.authentication.user_permissions"
                 class="AnnoStationBundle\Service\Authentication\UserPermissions">
            <argument type="service" id="security.token_storage"/>
        </service>

        <service id="annostation.labeling_api.service.video.video_frame_splitter"
                 class="AnnoStationBundle\Service\Video\VideoFrameSplitter">
            <argument type="service" id="annostation.labeling_api.service.frame_cdn.selected-alias"/>
            <argument>%ffmpeg_executable%</argument>
            <argument type="service" id="oneup_flysystem.cache_filesystem"/>
        </service>

        <service id="annostation.labeling_api.view.serialization_listener"
                 class="AnnoStationBundle\Service\View\LabelingTaskSerializationSubscriber">
            <tag name="jms_serializer.event_subscriber"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="annostation.labeling_api.service.task_read_only_decider"/>
        </service>

        <service id="annostation.labeling_api.service.video_cdn.flysystem"
                 class="AnnoStationBundle\Service\VideoCdn\Flysystem">
            <argument type="service" id="oneup_flysystem.video_cdn_filesystem"/>
        </service>

        <service id="annostation.labeling_api.service.report" class="AnnoStationBundle\Service\Report">
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
            <argument type="service" id="annostation.labeling_api.database.facade.report"/>
            <argument type="service" id="annostation.labeling_api.service.ghost_classes_propagation"/>
            <argument type="service" id="annostation.services.database_document_manager_factory"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_frame"/>
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
        </service>

        <service id="annostation.labeling_api.service.label_importer.simple_xml_2d"
                 class="AnnoStationBundle\Service\LabelImporter\Importer\SimpleXml2d">
            <argument type="service" id="annostation.labeling_api.service.task_incomplete"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
        </service>

        <service id="annostation.labeling_api.service.label_importer.simple_xml_3d"
                 class="AnnoStationBundle\Service\LabelImporter\Importer\SimpleXml3d">
            <argument type="service" id="annostation.labeling_api.service.task_incomplete"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
        </service>

        <service id="annostation.labeling_api.service.label_importer.simple_xml"
                 class="AnnoStationBundle\Service\LabelImporter\SimpleXml">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.service.label_importer.simple_xml_2d"/>
            <argument type="service" id="annostation.labeling_api.service.label_importer.simple_xml_3d"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.import"
                 class="AnnoStationBundle\Service\ProjectImporter\Import">
            <argument type="service" id="annostation.labeling_api.service.project_importer.facade.project"/>
            <argument type="service" id="annostation.labeling_api.service.project_importer.facade.requirements_xml"/>
            <argument type="service" id="annostation.labeling_api.service.project_importer.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.service.project_importer.facade.video"/>
            <argument type="service" id="annostation.labeling_api.service.project_importer.facade.campaign"/>
            <argument type="service" id="annostation.labeling_api.service.video_importer"/>
            <argument type="service" id="annostation.labeling_api.service.xml_validator_requirements_xml_import"/>
            <argument type="service" id="annostation.labeling_api.service.requirements_xml_validator"/>
            <argument type="service" id="annostation.labeling_api.service.task_creator"/>
            <argument type="service" id="annostation.labeling_api.vendor.worker_pool.amqp"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.project" class="AnnoStationBundle\Service\ProjectImporter\Facade\Project">
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.requirements_xml" class="AnnoStationBundle\Service\ProjectImporter\Facade\RequirementsXml">
            <argument type="service" id="annostation.labeling_api.database.facade.task_configuration"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeled_thing" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabeledThing">
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeling_task" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabelingTask">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeled_thing_in_frame" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabeledThingInFrame">
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_in_frame"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeled_frame" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabeledFrame">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_frame"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.video" class="AnnoStationBundle\Service\ProjectImporter\Facade\Video">
            <argument type="service" id="annostation.labeling_api.database.facade.video"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.campaign" class="AnnoStationBundle\Service\ProjectImporter\Facade\Campaign">
            <argument type="service" id="annostation.labeling_api.database.facade.campaign"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeled_thing_group" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabeledThingGroup">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeled_thing_group" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabeledThingGroup">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group"/>
        </service>

        <service id="annostation.labeling_api.service.project_importer.facade.labeled_thing_group_in_frame" class="AnnoStationBundle\Service\ProjectImporter\Facade\LabeledThingGroupInFrame">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_thing_group_in_frame"/>
        </service>

        <service id="annostation.labeling_api.service.project_deleter.project" class="AnnoStationBundle\Service\ProjectDeleter\Project">
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.service.project_deleter.delete.project"/>
            <argument type="service" id="annostation.labeling_api.service.project_deleter.delete.exports"/>
            <argument type="service" id="annostation.labeling_api.service.project_deleter.delete.reports"/>
            <argument type="service" id="annostation.labeling_api.service.project_deleter.delete.labeling_tasks"/>
        </service>

        <service id="annostation.labeling_api.service.task_database_security_permission_service" class="AnnoStationBundle\Service\TaskDatabaseSecurityPermissionService">
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.organisation"/>
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_group"/>
            <argument type="service" id="annostation.labeling_api.database.facade.user"/>
            <argument type="service" id="annostation.labeling_api.database.facade.couch_db_security"/>
            <argument>%couchdb_user_read_only%</argument>
        </service>

        <service id="annostation.labeling_api.service.user_roles_rebuilder" class="AnnoStationBundle\Service\UserRolesRebuilder">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_group"/>
            <argument type="service" id="annostation.labeling_api.database.facade.project"/>
            <argument type="service" id="annostation.labeling_api.database.facade.organisation"/>
            <argument type="service" id="annostation.labeling_api.database.facade.couchdb_users"/>
        </service>

        <service id="annostation.labeling_api.service.task_database_validate_doc_update_document_service" class="AnnoStationBundle\Service\TaskDatabaseValidateDocUpdateDocumentService">
            <argument type="service" id="annostation.services.database_document_manager_factory"/>
        </service>

        <service id="annostation.labeling_api.service.labeled_frame_end_calculation_service"
                 class="AnnoStationBundle\Service\LabeledFrameEndCalculationService">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.database.facade.factory.labeled_frame"/>
        </service>

        <service id="annostation.labeling_api.monitoring.check.security_document_existence_in_task_databases"
                 class="AnnoStationBundle\Service\Monitoring\Check\SecurityDocumentExistenceInTaskDatabases">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.service.task_database_creator"/>
            <argument type="service" id="guzzle.client"/>
            <argument>%couchdb_user%</argument>
            <argument>%couchdb_password%</argument>
            <argument>%couchdb_host%</argument>
            <argument>%couchdb_port%</argument>
            <tag name="liip_monitor.check" alias="security_document_existence_in_task_databases" group="default"/>
        </service>

        <service id="annostation.labeling_api.monitoring.check.validate_doc_update_document_existence_in_task_databases"
                 class="AnnoStationBundle\Service\Monitoring\Check\ValidateDocUpdateDocumentExistenceInTaskDatabases">
            <argument type="service" id="annostation.labeling_api.database.facade.labeling_task"/>
            <argument type="service" id="annostation.labeling_api.service.task_database_creator"/>
            <argument type="service" id="guzzle.client"/>
            <argument>%couchdb_user%</argument>
            <argument>%couchdb_password%</argument>
            <argument>%couchdb_host%</argument>
            <argument>%couchdb_port%</argument>
            <tag name="liip_monitor.check" alias="validate_doc_update_document_existence_in_task_databases" group="default"/>
        </service>

        <service id="annostation.labeling_api.event_listener.set_created_modified_at_to_documents"
                 class="AnnoStationBundle\EventListener\SetCreatedModifiedAtToDocuments">
            <argument type="service" id="annostation.labeling_api.helper.system_date_time_provider" />
            <tag name="doctrine_couchdb.event_subscriber"/>
        </service>

        <service id="annostation.labeling_api.service.ghost_labeled_thing_group_in_frame_classes_propagation"
                 class="AnnoStationBundle\Service\GhostLabeledThingGroupInFrameClassesPropagation">
        </service>
    </services>
</container>
